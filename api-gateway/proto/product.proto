syntax = "proto3";

option go_package = "pkg/api/product";

package api;

import "google/protobuf/timestamp.proto";
import "proto/google/api/annotations.proto";

service ProductService {
  rpc CreateProduct(CreateProductRequest) returns (CreateProductResponse) {
    option (google.api.http) = {
      post: "/products"
      body: "*"
    };
  }

  rpc GetProduct(GetProductRequest) returns (GetProductResponse) {
    option (google.api.http) = {
      get: "/products/{id}"
    };
  }

  rpc UpdateProduct(UpdateProductRequest) returns (UpdateProductResponse) {
    option (google.api.http) = {
      put: "/products/{id}"
      body: "*"
    };
  }

  rpc DeleteProduct(DeleteProductRequest) returns (DeleteProductResponse) {
    option (google.api.http) = {
      delete: "/products/{id}"
    };
  }

  rpc ListProducts(ListProductsRequest) returns (ListProductsResponse) {
    option (google.api.http) = {
      get: "/products"
    };
  }
}

message Product {
  string id = 1;
  string name = 2;
  string description = 3;
  int64 price = 4;
  int64 stock = 5;
  google.protobuf.Timestamp created_at = 6;
  google.protobuf.Timestamp updated_at = 7;
}

message CreateProductRequest {
  string name = 1;
  string description = 2;
  int64 price = 3;
  int64 stock = 4;
}

message CreateProductResponse {
  string id = 1;
}

message GetProductRequest {
  string id = 1;
}

message GetProductResponse {
  Product product = 1;
}

message UpdateProductRequest {
  string id = 1;
  string name = 2;
  string description = 3;
  int64 price = 4;
  int64 stock = 5;
}

message UpdateProductResponse {
  Product product = 1;
}

message DeleteProductRequest {
  string id = 1;
}

message DeleteProductResponse {
  bool success = 1;
}

message ListProductsRequest {
  int64 offset = 1;
  int64 limit = 2;
}

message ListProductsResponse {
  repeated Product products = 1;
}
